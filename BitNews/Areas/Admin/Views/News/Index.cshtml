@using BitNews.Models;
@model Paginate<NewsVM>
@{
    ViewData["Title"] = "Index";
}


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="sweetalert2.all.min.js"></script>

<style>
    th {
        color: black;
        text-align: center;
    }

    td {
        color: black;
        vertical-align: middle !important;
        text-align: center;
        border-radius: 0px;
        width: 350px !important;
    }

    img {
        border-radius: 0px !important;
        width: 100% !important;
        height: 100% !important;
    }

    /* Style for buttons and links */
    .action-btn {
        width: 110px !important;
        margin: 5px;
    }

    .action-btn-group {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
</style>


@if ((ViewBag.categories == null || ((List<SelectListItem>)ViewBag.categories).Count == 0) &&
    (ViewBag.tag == null || ((List<SelectListItem>)ViewBag.tag).Count == 0))
{
    <script>
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Categories and Tags Must be Created First',
        })
    </script>
}
else if ((ViewBag.categories == null || ((List<SelectListItem>)ViewBag.categories).Count == 0))
{
    <script>
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Category Must be Created First',
        })
    </script>
}
else if ((ViewBag.tag == null || ((List<SelectListItem>)ViewBag.tag).Count == 0))
{
    <script>
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Tag Must be Created First',
        })
    </script>
}


<div class="container my-3">
    <h2 class="text-center">News</h2>
    @if ((ViewBag.categories == null || ((List<SelectListItem>)ViewBag.categories).Count == 0) && (ViewBag.tag == null || ((List<SelectListItem>)ViewBag.tag).Count == 0))
    {
        <script>
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Category and Tag Must be Created First',
            })
        </script>
        <div class="create-btn ">
            <a asp-controller="News" asp-action="Index" class="btn btn-success btn-rounded btn-fw">Create</a>
        </div>
    }
    else if ((ViewBag.categories == null || ((List<SelectListItem>)ViewBag.categories).Count == 0))
    {
        <script>
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Category Must be Created First',
            })
        </script>
        <div class="create-btn ">
            <a asp-controller="News" asp-action="Index" class="btn btn-success btn-rounded btn-fw">Create</a>
        </div>

    }
    else if ((ViewBag.tag == null || ((List<SelectListItem>)ViewBag.tag).Count == 0))
    {
        <script>
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Tag Must be Created First',
            })
        </script>
        <div class="create-btn ">
            <a asp-controller="News" asp-action="Index" class="btn btn-success btn-rounded btn-fw">Create</a>
        </div>


    }
    else
    {
        <div class="create-btn ">
            <a asp-controller="News" asp-action="Create" class="btn btn-success btn-rounded btn-fw">Create</a>
        </div>
    }

    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>
                        Image
                    </th>
                    <th>
                        Title
                    </th>
                    <th>
                        Category
                    </th>
                    <th>
                        Options
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Datas.OrderByDescending(m => m.Id))
                {
                    <tr>
                        <td class="py-1">
                            <img src="~/assets/img/News/@item.Image" />
                        </td>
                        <td class="py-1">
                            @item.Title
                        </td>
                        <td class="py-1">
                            @item.CategoryName
                        </td>
                        <td style="width: 500px !important;">
                            <div class="action-btn-group">
                                <a class="btn btn-info btn-rounded btn-fw action-btn"
                               asp-action="Comments" asp-route-id="@item.Id">Comment</a>

                                <a class="btn btn-primary btn-rounded btn-fw action-btn"
                               asp-action="Detail" asp-route-id="@item.Id">Detail</a>

                                <a class="btn btn-warning btn-rounded btn-fw action-btn"
                               asp-action="Edit" asp-route-id="@item.Id">Edit</a>

                                <form method="post" asp-action="Delete" asp-route-id="@item.Id"
                                      onsubmit="return confirm('Are you sure you want to delete this News?')">
                                    <button type="submit" class="btn btn-danger btn-rounded btn-fw action-btn">Delete</button>
                                </form>
                            </div>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
        <div class="pagination d-flex justify-content-center mt-3">
            <nav aria-label="...">
                <ul class="pagination">
                    <li class="page-item @(Model.HasPrevious ? "" : "disabled")">
                        <a class="page-link" asp-route-page="@(Model.CurrentPage - 1)" tabindex="-1">Previous</a>
                    </li>
                    @for (int i = 1; i <= Model.TotalPage; i++)
                    {
                        <li class="page-item @(Model.CurrentPage == i ? "disabled" : "")">
                            <a class="page-link @(Model.CurrentPage == i ? "active-paginate" : "")" asp-route-page="@i">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.HasNext ? "" : "disabled")">
                        <a class="page-link" asp-route-page="@(Model.CurrentPage + 1)">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>








