@using BitNews.Areas.Admin.ViewModels.News;

@model Paginate<NewsVM>

@{
    ViewData["Title"] = "Index";
    var distinctCategories = Model.Datas.Select(item => item.CategoryName).Distinct();
}

<main class="main oh" id="main">

    <section class="section-wrap main-content">
        <div class="container">
            @if (!(Model != null && Model.Datas.Count > 0))
            {
                <h5 class="text-center">No news available.</h5>
            }
            else
            {
                <div class="row">
                    <div class="col-md-4">
                        <h1 class="page-title h2">All News</h1>
                        <div class="row flex-column">
                            <div class="container">
                                <select id="sortSelect" name="sort" class="w-75 mb-1">
                                    <option value="">Sort By</option>
                                    <option value="latest" selected="@(ViewBag.SortBy == "latest" ? "selected" : null)">Latest News</option>
                                    <option value="oldest" selected="@(ViewBag.SortBy == "oldest" ? "selected" : null)">Oldest News</option>
                                </select>

                                <form id="pageSizeForm" asp-action="Index" method="get">
                                    <select id="pageSizeSelect" name="pageSize" class="w-75 mb-1" onchange="submitForm()">
                                        <option>Show Item</option>
                                        <option value="6" select=@(ViewBag.PageSize == 6 ? "selected" : "")>Show 6</option>
                                        <option value="12" select=@(ViewBag.PageSize == 12 ? "selected" : "")>Show 12</option>
                                        <option value="24" select=@(ViewBag.PageSize == 24 ? "selected" : "")>Show 24</option>
                                        <option value="48" select=@(ViewBag.PageSize == 48 ? "selected" : "")>Show 48</option>
                                    </select>
                                </form>
                            </div>

                            <div class="shop-widget w-80">
                                <div class="container">
                                    <form>
                                        <h6 class="shop-widget-title my-2">Filter by Category</h6>

                                        <ul class="shop-widget-list">
                                            @foreach (var categoryName in distinctCategories)
                                            {
                                                <li class="my-2">
                                                    <div class="shop-widget-content">
                                                        <input type="checkbox" id="@($"tag{categoryName}")">
                                                        <label for="@($"tag{categoryName}")">@categoryName</label>
                                                    </div>
                                                </li>
                                            }
                                        </ul>
                                    </form>
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="col-md-8">

                        <div class="row justify-content-center">
                                <partial name="_ProductsPartial" />
                        </div>

                        <div class="row">
                            <div class="col-lg-12">
                                <div class="pagination d-flex justify-content-center mt-3">
                                    <nav aria-label="...">
                                        <ul class="pagination">
                                            <li class="page-item @(Model.HasPrevious ? "" : "disabled")">
                                                <a class="page-link" href="@Url.Action("Index", new { selectedTags = ViewBag.SelectedTags, page = Model.CurrentPage - 1, pageSize = ViewBag.PageSize })" tabindex="-1">Previous</a>
                                            </li>
                                            @for (int i = 1; i <= Model.TotalPage; i++)
                                            {
                                                <li class="page-item @(Model.CurrentPage == i ? "disabled" : "")">
                                                    <a class="page-link @(Model.CurrentPage == i ? "active-paginate" : "")" href="@Url.Action("Index", new { selectedTags = ViewBag.SelectedTags, page = i, pageSize = ViewBag.PageSize })">@i</a>
                                                </li>
                                            }

                                            <li class="page-item @(Model.HasNext ? "" : "disabled")">
                                                <a class="page-link" href="@Url.Action("Index", new { selectedTags = ViewBag.SelectedTags, page = Model.CurrentPage + 1, pageSize = ViewBag.PageSize })">Next</a>
                                            </li>
                                        </ul>
                                    </nav>
                                </div>

                            </div>
                        </div>

                    </div>
                </div>

            }
       
        </div>
    </section>

    <div id="back-to-top">
        <a href="#top" aria-label="Go to top"><i class="ui-arrow-up"></i></a>
    </div>

</main>

@section Scripts {
    <script>
        $(document).ready(function () {
            function filterNewsByTag() {
                var selectedTags = [];
                $('input[type="checkbox"]:checked').each(function () {
                    selectedTags.push($(this).attr('id').replace('tag', ''));
                });

                if (selectedTags.length === 0) {
                    $('.filter-category-news').show();
                } else {
                    $('.filter-category-news').hide();

                    selectedTags.forEach(function (tagId) {
                        $('.entry[data-tag="' + tagId + '"]').closest('.filter-category-news').show();
                    });
                }
            }

            function sortNews() {
                var selectedOption = $('#sortSelect').val();

                function getPublicationDate(element) {
                    return $(element).find('.entry-meta-date').text();
                }

                function comparePublicationDates(a, b) {
                    var dateA = getPublicationDate(a);
                    var dateB = getPublicationDate(b);

                    if (selectedOption === 'oldest') {
                        return new Date(dateA) - new Date(dateB);
                    } else if (selectedOption === 'latest') {
                        return new Date(dateB) - new Date(dateA);
                    }
                }

                var articles = $('.filter-category-news').toArray();
                articles.sort(comparePublicationDates);

                $('.news-container').empty().append(articles);
            }


            $('#sortSelect').on('change', sortNews);

            $('input[type="checkbox"]').on('change', filterNewsByTag);

            filterNewsByTag();
            sortNews();
        });

        function submitForm() {
            document.getElementById('pageSizeForm').submit();
        }
    </script>
}
